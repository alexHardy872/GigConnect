@model GigConnect.Models.ViewModels.GigInfoViewModel

@{
    ViewBag.Title = "Edit";
}

    <div class="contentCol">
        <h2>Edit Gig </h2>

        @using (Html.BeginForm())
        {


            @Html.AntiForgeryToken()

            @Html.HiddenFor(x => x.gig.GigId)

            @Html.HiddenFor(x => x.gig.venueId)

            <div>
                <button class="btn-default">@Html.ActionLink("EDIT LINEUP", "RemoveBandsFromLineUp", "Gig", new { gigId = Model.gig.GigId }, null)</button>
            </div>
            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.gig.GigId)
                @Html.HiddenFor(model => model.gig.venueId)

                <div class="form-group">
                    @Html.LabelFor(model => model.gig.description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.TextAreaFor(model => model.gig.description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.gig.description, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.gig.timeOfGig, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.gig.timeOfGig, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.gig.timeOfGig, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.gig.open, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.gig.open)
                            @Html.ValidationMessageFor(model => model.gig.open, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>


