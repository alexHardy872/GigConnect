@model GigConnect.Models.ViewModels.ReviewViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Review a @Model.reviewOf</h4>
    <hr />
    @Html.HiddenFor(x => x.reviewOf)
    @Html.HiddenFor(x => x.reviewedId)
    @Html.HiddenFor(x => x.review.ReviewId)
    @Html.HiddenFor(x => x.review.timeStamp)




    <div class="form-group">
        @Html.LabelFor(model => model.review.rating, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.review.rating, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.review.rating, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.review.content, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Venue.description, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.TextAreaFor(model => model.review.content, new { htmlAttributes = new { @class = "form-control" } });
            @Html.ValidationMessageFor(model => model.review.content, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}



@if(Model.reviewOf == "Band")
{
<div>
    @Html.ActionLink("Back to Band Profile", "ViewBandProfile", "ProfileView", new { bandId = Model.reviewedId }, null )
</div>

}
else
{
<div>
    @Html.ActionLink("Back to Venue Profile", "ViewVenueProfile", "ProfileView", new { venueId = Model.reviewedId }, null)
</div>
}

